# move_base基础参数配置，包括全局、局部规划器以及重恢复行为(move_base basic parameter configuration including global planner, local planner and restored demeanor)
shutdown_costmaps: false # 当move_base不活动时是否关闭costmaps的加载(whether to close when move_base stops moving)

base_global_planner: "global_planner/GlobalPlanner" # 指定用于move_base的全局规划器插件名称(name of the global planner used in move_base)
#base_global_planner: "navfn/NavfnROS"
base_local_planner: "teb_local_planner/TebLocalPlannerROS" # 指定用于move_base的局部规划器名称(name of local planner used in move_base)
#base_local_planner: "dwa_local_planner/DWAPlannerROS"

controller_frequency: 20.0 # 向底盘控制移动话题cmd_vel发送命令的频率hz(the frequency to send command to chassis motion control topic cmd_vel, unit: hz)
controller_patience: 10.0 # 控制器超过这个时间没有收到控制指令则认为局部路径规划失败(if the controller doesn't receive control command within the set time, local planning ends in failre)

planner_frequency: 20.0 # 全局规划操作的执行频率.如果设置为 0.0,则全局规划器仅在接收到新的目标点, 或者局部规划器报告路径堵塞时才会重新执行规划操作(execution frequency of global planning. If it is set as 0.0, it will plan again only when the global planner receives a new target ot the path it reports is blocked)
planner_patience: 10.0 # 全局规划时间，超时则认为失败(time spent on global planning. If it times out, global planning ends in failure)

oscillation_timeout: 15.0 # 执行修复机制前,允许振荡的时长(how long in seconds to allow for oscillation before executing recovery behaviors)
oscillation_distance: 0.03 # 配合timeout的含义就是，5s内超过0.1m范围内的运动才不算陷入局部震荡，如果不符则说明全局路径规划失败，将执行恢复(How far in meters the robot must move to be considered not to be oscillating. Moving this far resets the timer counting up to oscillation_timeout)

max_planning_retries: 1 # 在执行恢复行为之前允许计划重试多少次。值-1.0对应于无限重试（即全局规划失败后立刻执行）。(How many times to allow for planning retries before executing recovery behaviors. A value of -1.0 corresponds to an infinite retries)

recovery_behavior_enabled: true # 是否启用move_base恢复行为以尝试清理空间(whether to enable move_base recovery behavior to attempt to clear out space)
clearing_rotation_allowed: true # 确定机器人在尝试清理空间时是否会尝试就地旋转。注意：此参数仅在使用默认恢复行为时使用(Determines whether or not the robot will attempt an in-place rotation when attempting to clear out space. Note: This parameter is only used when the default recovery behaviors are in use.)

# 当move_base未能按照指定的顺序找到有效计划时，将运行这些行为。在每个行为完成后，move_base将尝试制定计划。(These behaviors will be executed when move_base fails to find the effective plan according to the designated order. move_base will attempt to make a plan after each behavior completes)
# 如果规划成功，move_base将继续正常运行。否则，将执行列表中的下一个恢复行为(If planning is successful, move_base will continue normal operation. Otherwise, the next recovery behavior in the list will be executed.)
recovery_behaviors:
  - name: 'conservative_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'aggressive_reset'
  #  type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'super_reset'
  #  type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'clearing_rotation'
    type: 'rotate_recovery/RotateRecovery'
  #- name: 'move_slow_and_clear'
    #type: 'move_slow_and_clear/MoveSlowAndClear'

# static_layer：静态地图层，通常是slam建立完成的静态地图(layer of static map. In general, it is the static map created after slam)
# obstacle_layer：障碍地图层，用于动态记录传感器感知到的障碍物信息(layer of obstacle map which is used to record the obstacle information obtained by the sensor)
# inflation_layer：膨胀层，在以上两层地图上进行膨胀（向外扩张），以避免机器人撞上障碍物(inflation layer. Inflate on the above two layers to protect the robot from crashing into the obstacle)

# 保守复位(conservative reset)
conservative_reset:
  reset_distance: 2.0 #当试图清除地图中的空间时，距离机器人的距离（以米为单位）将从成本地图中清除障碍物。请注意，此参数仅在move_base使用默认恢复行为时使用(The distance away from the robot in meters beyond which obstacles will be cleared from the costmap when attempting to clear space in the map. Note, this parameter is only used when the default recovery behaviors are used for move_base.)
  #layer_names: [static_layer, obstacle_layer, inflation_layer]
  layer_names: [obstacle_layer]

# 旋转清除(clear rotation)
#clearing_rotation:

# 激进复位(aggressive reset)
aggressive_reset:
  reset_distance: 3.0
  #layer_names: [static_layer, obstacle_layer, inflation_layer]
  layer_names: [obstacle_layer]

super_reset:
  reset_distance: 5.0
  #layer_names: [static_layer, obstacle_layer, inflation_layer]
  layer_names: [obstacle_layer]

move_slow_and_clear:
  clearing_distance: 1 # 清除障碍物的距离机器人的半径，以米为单位。(The distance away from robot's radius in meters beyond which obstacles will be cleared)
  limited_trans_speed: 0.1 # 在执行此恢复行为时，机器人的平移速度（以米/秒为单位）将受到限制。(before this recovery behavior is executed, robot's translation velocity in m/s will be limited)
  limited_rot_speed: 0.1 # 在执行此恢复行为时，机器人的旋转速度（以弧度/秒为单位）将受到限制。(before this recovery behavior is executed, robot's rotation velocity in rad/s will be limited)
  limited_distance: 0.3 # 在解除速度限制之前，机器人必须移动的距离（以米为单位）。(before the restriction on velocity is lifted, the distance in meters beyond which the robot must move)
